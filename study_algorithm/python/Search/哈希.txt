1.运用
MD5:
md5以512位分组来处理输入的信息，且每一分组又被划分为16个32位子分组，经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个32位分组级联后将生成一个128位散列值。 

在 md5算法中，首先需要对信息进行填充，使其字节长度对512求余的结果等于448。因此，信息的字节长度（bits length）将被扩展至n*512+448，即n*64+56个字节（bytes），n为一个正整数。填充的方法如下，在信息的后面填充一个1和无数个 0，直到满足上面的条件时才停止用0对信息的填充。然后，在在这个结果后面附加一个以64位黑吧表示的填充前信息长度。经过这两步的处理，现在的信息字节长度=n*512+448+64=(n+1)*512，即长度恰好是512的整数倍。这样做的原因是为满足后面处理中对信息长度的要求。 

SHA-1:
对于任意长度的明文，SHA1首先对其进行分组，使得每一组的长度为512位，然后对这些明文分组反复重复处理。
对于每个明文分组的摘要生成过程如下：
（1） 将512位的明文分组划分为16个子明文分组，每个子明文分组为32位。
（2） 申请5个32位的链接变量，记为A、B、C、D、E。
（3） 16份子明文分组扩展为80份。
（4） 80份子明文分组进行4轮运算。
（5） 链接变量与初始链接变量进行求和运算。
（6） 链接变量作为下一个明文分组的输入重复进行以上操作。
（7） 最后，5个链接变量里面的数据就是SHA1摘要。